<!DOCTYPE html>
<!-- saved from url=(0050)https://github.qualcomm.com/pages/bchintal/VulQan/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
     <title>IMU over IP</title>

    <link rel="stylesheet" href="../../stylesheets/styles.css">
    <link rel="stylesheet" href="../../stylesheets/pygment_trac.css">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
    <!--[if lt IE 9]>
    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
  <style type="text/css"></style></head>
  <body>
    <div class="wrapper">
      <header>
        <h1>IMU over IP</h1>
        <p>Sensor Fusion to estimate Rotation basis with an Android Phone </p>

      </header>
      <section>
<p>This project was of interest to me ever since I had come across IMU systems. While at college the only way to play around with sensor fusion was to get expensive sensors from Sparkfun and then integrate them. However, with the advent of the Smart-phone, these sensors namely the Accelerometers, Gyroscopes and Magnetometers come bundled with the system. </p>

<p>Now that every phone has all the sensors integrated to it, it is only a matter of accessing this data and making it available to the external world. I achieved this using an Android app, which sets up a server on the phone and can be queried to broadcast specific data pertaining to the phone's sensors.</p>

<p>This setup now ensures that the data which was previously available locally ( only on the phone ) is now available to any computer on the internet. </p>

<p> With the ideas suggested by this paper [<a href="https://gentlenav.googlecode.com/files/DCMDraft2.pdf">Link</a>], I went ahead and fused the data coming in from all three sensors, to develop the phone's current basis with respect to earths' frame of reference. I then use this basis to transform a wire-mesh cuboid ( representative of the phone ) into this basis, thereby replicating the orientation of the phone </p>
  
<h3>Demonstration : </h3>

<p></p>

<figure><img src="../../images/IMU.gif" alt="Mitigation through Hot-Plugging">
<figcaption>Demonstration of the IMU.</figcaption>
</figure>
<p>To get this project to the above state, there were a few intermediatery steps required.</p>

<p>First step was to get Rotation Basis into action, this is an idea anyone with an introduction to Linear Algebra would have an intuition for.However, I had never seen it myself as a simulation. So I got a wireframe cuboid in the Identity basis, then started rotating this basis about the X axis with a monotonous increase of the angle. </p>

<figure><img src="../../images/ipimu.gif" alt="Mitigation through Hot-Plugging">
<figcaption>Getting Rotation Basis to work.</figcaption>
</figure>
<p> With this infrastructure in place, I had to implement the above mentioned paper and poll the server to dish-out required sensor values. This was enough to get the demonstration working. <p> 
<p> What I tried to do next was to see if position tracking could work. The math behind getting this feature to work is pretty simple.</p>
<ul>
  <li>The IMU gives me acceleration in the phone's basis, with the current infrastructure I know this basis exactly.</li>
  <li>All that I had to do was to convert this acceleration into Earth's basis, then remove the ever present G component</li>
  <li>Assuming constant acceleration for a small duration calculate displacement generated. Then add this displacement vectorially</li>
  
  <img src="../../images/traj.png" alt="Mitigation through Hot-Plugging">
</ul>

<p> Intuitively this is supposed to work, but the results turned out otherwise. I believe there are few reaasons for this to happen </p>
<ul>
  <li>Removing G from Acceleration introduces numerical errors.</li>
  <li>This is a feedforward system, with no means of correcting it</li>
  <li>The errors pile up and give an impression of false displacement</li>
  
</ul>
<figure><img src="../../images/phantomdisp.png" alt="Mitigation through Hot-Plugging">
<figcaption>Numerical error induced displacement despite phone being stationary.</figcaption>
</figure>

<p>In conclusion, calculating abstract orientation from just sensor fusion is works fine. However, trying to use this data to calculate positioning without any feedback loop is prone to high numerical error. </p>



      </section>
    </div>
    <script src="./Vulcan by bchintal_files/scale.fix.js"></script>
    
  
</body></html>

